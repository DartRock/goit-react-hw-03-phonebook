{"version":3,"sources":["App.module.css","components/ContactForm/ContactForm.module.css","components/ContactForm/ContactForm.jsx","components/ContactList/ContactList.jsx","components/Filter/Filter.jsx","App.js","components/services/localStorage.js","index.js","components/ContactList/ContactList.module.css","components/Filter/Filter.module.css"],"names":["module","exports","ContactForm","state","name","number","onChangeHandler","e","target","value","setState","submitHandler","preventDefault","props","onSubmit","this","className","s","form","label","type","pattern","title","onChange","input","required","button","Component","ContactList","filterContacts","onDeleteContacts","list","map","contact","item","text","onClick","id","Filter","wrapper","App","contacts","filter","contactToAdd","nanoid","some","toLowerCase","alert","flterContacts","normalizedFilter","includes","onChangeFilter","deleteContact","prevState","localContacts","key","JSON","parse","localStorage","getItem","error","storage","prevProps","setItem","stringify","section","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.79a5d675.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"section\":\"App_section__pE3tq\",\"title\":\"App_title__NSYWk\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"ContactForm_form__1TZDV\",\"label\":\"ContactForm_label__3zO4L\",\"input\":\"ContactForm_input__2v6zv\",\"button\":\"ContactForm_button__1Vg8I\"};","import React from 'react'\r\nimport { Component } from 'react';\r\nimport s from './ContactForm.module.css'\r\n\r\nclass ContactForm extends Component {\r\n  state = { name: \"\", number: \"\" };\r\n\r\n  onChangeHandler = e => {\r\n    const { name, value } = e.target;\r\n    this.setState({ [name]: value });\r\n  };\r\n\r\n  submitHandler = e => {\r\n    e.preventDefault();\r\n    this.props.onSubmit({ ...this.state });\r\n    this.setState({ name: \"\", number: \"\" });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <form onSubmit={this.submitHandler} className={s.form}>\r\n        <label className={s.label}>\r\n          Name\r\n          <input  \r\n            name=\"name\"\r\n            type=\"text\"\r\n            value={this.state.name}\r\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n            title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\r\n            onChange={this.onChangeHandler}\r\n            className={s.input}\r\n            required\r\n          />\r\n        </label>\r\n        <label className={s.label}>\r\n          Number\r\n          <input        \r\n            name=\"number\"\r\n            type=\"tel\"\r\n            value={this.state.number}\r\n            pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n            title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\r\n            onChange={this.onChangeHandler}\r\n            className={s.input}\r\n            required\r\n          />\r\n        </label>\r\n        <button type=\"submit\" className={s.button}> Add contact</button>\r\n      </form>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ContactForm","import React from 'react'\r\nimport PropTypes from 'prop-types';\r\nimport s from './ContactList.module.css'\r\n\r\nexport const ContactList = ({ filterContacts, onDeleteContacts }) => {\r\n    return (\r\n        <ul className={s.list}>\r\n            {filterContacts.map(contact => (\r\n                <li key={contact.id} className={s.item}>\r\n                    <p className={s.text}>{contact.name}: {contact.number} </p>\r\n                    <button type=\"button\" onClick={() => onDeleteContacts(contact.id)}>Delete</button>\r\n                </li>\r\n            ))}\r\n        </ul>\r\n    )\r\n};\r\n\r\nContactList.propTypes = {\r\n  filterContacts: PropTypes.array,\r\n  onDeleteContacts: PropTypes.func,\r\n};\r\n","import React from 'react'\r\nimport PropTypes from 'prop-types';\r\nimport s from './Filter.module.css'\r\n\r\nexport const Filter = ({ value, onChange }) => (\r\n  <div className={s.wrapper}>\r\n    <label className={s.label}>\r\n    Find contacts by name\r\n    <input\r\n      type=\"text\"\r\n      value={value}\r\n      onChange={onChange}\r\n      className={s.input}\r\n    ></input>\r\n  </label>\r\n  </div>\r\n);\r\n\r\nFilter.propTypes = {\r\n  value: PropTypes.string,\r\n  onChange: PropTypes.func,\r\n};\r\n","import { Component } from 'react';\nimport { nanoid } from 'nanoid';\nimport * as storage from './components/services/localStorage';\nimport ContactForm from './components/ContactForm/ContactForm';\nimport { ContactList } from './components/ContactList/ContactList';\nimport { Filter } from './components/Filter/Filter';\nimport s from './App.module.css';\n\nclass App extends Component {\n  state = {\n    contacts: [\n      { id: 'id-1', name: 'Rosie Simpson', number: '459-12-56' },\n      { id: 'id-2', name: 'Hermione Kline', number: '443-89-12' },\n      { id: 'id-3', name: 'Eden Clements', number: '645-17-79' },\n      { id: 'id-4', name: 'Annie Copeland', number: '227-91-26' },\n    ],\n    filter: '',\n  };\n\n  componentDidMount() {\n    const localContacts = storage.get('contacts');\n    if (localContacts) this.setState({ contacts: localContacts });\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    if (prevState.contacts !== this.state.contacts) {\n      storage.save('contacts', this.state.contacts);\n    }\n  }\n\n  submitHandler = ({ name, number }) => {\n    const contactToAdd = {\n      id: nanoid(),\n      name,\n      number,\n    };\n\n    if (\n      this.state.contacts.some(\n        contact =>\n          contact.name.toLowerCase() === contactToAdd.name.toLowerCase(),\n      )\n    ) {\n      return alert(`${contactToAdd.name} is already in contacts!`);\n    } else {\n      this.setState(({ contacts }) => {\n        return { contacts: [contactToAdd, ...contacts] };\n      });\n    }\n  };\n\n  flterContacts = () => {\n    const normalizedFilter = this.state.filter.toLowerCase();\n    return this.state.contacts.filter(contact =>\n      contact.name.toLowerCase().includes(normalizedFilter),\n    );\n  };\n  onChangeFilter = e => this.setState({ filter: e.target.value });\n\n  deleteContact = id => {\n    this.setState(prevState => ({\n      contacts: prevState.contacts.filter(contact => contact.id !== id),\n    }));\n  };\n\n  render() {\n    return (\n      <section className={s.section}>\n        <h1 className={s.title}>Phonebook</h1>\n        <ContactForm onSubmit={this.submitHandler} />\n        <h2 className={s.title}>Contacts</h2>\n        <Filter onChange={this.onChangeFilter} value={this.state.filter} />\n        <ContactList\n          filterContacts={this.flterContacts()}\n          onDeleteContacts={this.deleteContact}\n        />\n      </section>\n    );\n  }\n}\n\nexport default App;\n","const save = (key, value) => {\r\n  try {\r\n    localStorage.setItem(key, JSON.stringify(value));\r\n  } catch (error) {\r\n    return null;\r\n  }\r\n};\r\n\r\nconst get = key => {\r\n  try {\r\n    return JSON.parse(localStorage.getItem(key));\r\n  } catch (error) {\r\n    return null;\r\n  }\r\n};\r\n\r\nconst remove = key => {\r\n  try {\r\n    return localStorage.removeItem(key);\r\n  } catch (error) {\r\n    return null;\r\n  }\r\n};\r\n\r\nexport { get, save, remove };\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport 'normalize.css';\nimport './index.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"ContactList_list__3jOET\",\"item\":\"ContactList_item__2RFOV\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"Filter_wrapper__3uTgr\",\"label\":\"Filter_label__3Dnby\",\"input\":\"Filter_input__1ZMHY\"};"],"sourceRoot":""}